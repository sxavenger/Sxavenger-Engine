#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
//* component
#include "../Camera/CameraComponent.h"

//* c++
#include <concepts>

//-----------------------------------------------------------------------------------------
// forward
//-----------------------------------------------------------------------------------------
class FTexture;

////////////////////////////////////////////////////////////////////////////////////////////
// BasePostProcess class
////////////////////////////////////////////////////////////////////////////////////////////
class BasePostProcess {
public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	virtual ~BasePostProcess() = default;

	virtual void Process(
		FTexture* input, FTexture* output, CameraComponent* component
	) = 0;

private:
};

////////////////////////////////////////////////////////////////////////////////////////////
// PostProcess concept
////////////////////////////////////////////////////////////////////////////////////////////
template <class T>
concept PostProcessConcept = std::derived_from<T, BasePostProcess>;
