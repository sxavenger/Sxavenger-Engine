#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
//* engine
#include <Engine/System/DirectX/DxObject/DxDimensionBuffer.h>

//* lib
#include <Lib/Sxl/Flag.h>

//* c++
#include <memory>

////////////////////////////////////////////////////////////////////////////////////////////
// LightSource class
////////////////////////////////////////////////////////////////////////////////////////////
class LightSource {
public:

	////////////////////////////////////////////////////////////////////////////////////////////
	// InlineShadow structure
	////////////////////////////////////////////////////////////////////////////////////////////
	struct InlineShadow {
	public:

		//=========================================================================================
		// public methods
		//=========================================================================================

		void Init();

		//=========================================================================================
		// public variables
		//=========================================================================================

		float strength;
		Sxl::FlagMask<D3D12_RAY_FLAGS, uint32_t> flag;

		// todo: soft shadow
		// strength自体を削除したい.
	};
	
public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	LightSource()          = default;
	virtual ~LightSource() = default;

	//* buffer option *//

	void CreateShadowBuffer();

	const D3D12_GPU_VIRTUAL_ADDRESS& GetShadowBufferAddress() const;

protected:

	//=========================================================================================
	// protected variables
	//=========================================================================================

	std::unique_ptr<DxObject::DimensionBuffer<InlineShadow>> shadow_;

};
