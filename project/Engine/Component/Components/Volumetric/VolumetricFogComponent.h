#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
//* component
#include "../BaseComponent.h"

// * engine
#include <Engine/System/DirectX/DxObject/DxDimensionBuffer.h>

////////////////////////////////////////////////////////////////////////////////////////////
// VolumetricFogComponent class
////////////////////////////////////////////////////////////////////////////////////////////
class VolumetricFogComponent final
	: public BaseComponent {
public:

	////////////////////////////////////////////////////////////////////////////////////////////
	// Parameter strucutre
	////////////////////////////////////////////////////////////////////////////////////////////
	struct Parameter {
	public:

		//=========================================================================================
		// public methods
		//=========================================================================================

		void Init() {
			step = 8;
		}

		//=========================================================================================
		// public variables
		//=========================================================================================

		uint32_t step;

	};

public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	VolumetricFogComponent(MonoBehaviour* behaviour) : BaseComponent(behaviour) { Init(); }
	~VolumetricFogComponent() override = default;

	void Init();

	//* parameter option *//

	const D3D12_GPU_VIRTUAL_ADDRESS& GetGPUVirtualAddress() const;

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	std::unique_ptr<DxObject::DimensionBuffer<Parameter>> parameter_ = nullptr;

};
