#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
//* engine
#include <Engine/System/DirectX/DxObject/DxDimensionBuffer.h>

//* lib
#include <Lib/Geometry/Color4.h>

////////////////////////////////////////////////////////////////////////////////////////////
// IBLParameter class
////////////////////////////////////////////////////////////////////////////////////////////
class IBLParameter {
public:

	////////////////////////////////////////////////////////////////////////////////////////////
	// Type enum class
	////////////////////////////////////////////////////////////////////////////////////////////
	enum class Type : uint32_t {
		None,
		Value,
		TextureCube,
		Texture2D
	};

	////////////////////////////////////////////////////////////////////////////////////////////
	// Parameter structure
	////////////////////////////////////////////////////////////////////////////////////////////
	struct Parameter {
	public:

		//=========================================================================================
		// public methods
		//=========================================================================================

		void Init();

		//=========================================================================================
		// public variables
		//=========================================================================================

		Type type;
		uint32_t index;
		Color4f value;

	};

public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	IBLParameter()  = default;
	~IBLParameter() = default;

	void Create();

	//* parameter option *//

	void SetNone();

	void SetColor(const Color4f& color);

	void SetTextureCube(uint32_t index);

	void SetTexture2D(uint32_t index);

	//* getter *//

	const D3D12_GPU_VIRTUAL_ADDRESS& GetGPUVirtualAddress() const;

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	std::unique_ptr<DxObject::DimensionBuffer<Parameter>> parameter_;

};
