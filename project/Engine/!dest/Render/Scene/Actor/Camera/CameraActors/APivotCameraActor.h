#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
//* actor
#include "../ACameraActor.h"

////////////////////////////////////////////////////////////////////////////////////////////
// ACineCameraActor class
////////////////////////////////////////////////////////////////////////////////////////////
class APivotCameraActor
	: public ACameraActor {
public:

	////////////////////////////////////////////////////////////////////////////////////////////
	// Parameter structure
	////////////////////////////////////////////////////////////////////////////////////////////
	struct Parameter {

		//* member *//

		Vector3f point = kOrigin3<float>;
		Vector2f angle = { 0.0f, pi_v / 16.0f };
		float distance = 12.0f;

	};

public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	APivotCameraActor()          = default;
	virtual ~APivotCameraActor() = default;

	void Init();

	void UpdateView();

	//* getter *//

	const Parameter& GetParameter() const { return parameter_; }
	Parameter& GetParameter() { return parameter_; }

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	Parameter parameter_;

};
