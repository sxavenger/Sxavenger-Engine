#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
//* DXOBJECT
#include "DxObjectCommon.h"

//* c++
#include <array>

////////////////////////////////////////////////////////////////////////////////////////////
// BlendMode enum class
////////////////////////////////////////////////////////////////////////////////////////////
enum class BlendMode : uint32_t {
	kBlendModeNone,            //!< ブレンドなし
	kBlendModeNormal,          //!< 通常αブレンド
	kBlendModeNormal_AlphaMax, //!< αブレンド(アルファ最大)
	kBlendModeAdd,             //!< 加算
	kBlendModeSubtract,        //!< 減算
	kBlendModeMultiply,        //!< 乗算
	kBlendModeScreen           //!< スクリーン
};


////////////////////////////////////////////////////////////////////////////////////////////
// DXOBJECT
////////////////////////////////////////////////////////////////////////////////////////////
_DXOBJECT_NAMESPACE_BEGIN

////////////////////////////////////////////////////////////////////////////////////////////
// BlendState class
////////////////////////////////////////////////////////////////////////////////////////////
class BlendState {
public:

	//=========================================================================================
	// public method
	//=========================================================================================

	BlendState()  = default;
	~BlendState() { Term(); }

	void Init();

	void Term();

	const D3D12_RENDER_TARGET_BLEND_DESC& GetDesc(BlendMode mode) { return descs_[static_cast<uint32_t>(mode)]; }

private:

	//=========================================================================================
	// private methods
	//=========================================================================================

	std::array<D3D12_RENDER_TARGET_BLEND_DESC, static_cast<uint32_t>(BlendMode::kBlendModeScreen) + 1> descs_;

};

_DXOBJECT_NAMESPACE_END
